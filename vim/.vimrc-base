" We'll allow project specific .vimrc
" and set secure to disable unsafe commands on project-specific vimrc
set exrc
set secure

filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'


" For autocompletion
Plugin 'prabirshrestha/async.vim.git'
Plugin 'prabirshrestha/vim-lsp.git'
Plugin 'prabirshrestha/asyncomplete.vim.git'
Plugin 'prabirshrestha/asyncomplete-lsp.vim.git'
Plugin 'w0rp/ale.git'

" For javascript
Plugin 'ryanolsonx/vim-lsp-javascript.git'
Plugin 'flowtype/vim-flow'

" For Vim generic plugins
Plugin 'scrooloose/nerdtree.git'
Plugin 'tpope/vim-surround.git'
Plugin 'terryma/vim-multiple-cursors.git'
Plugin 'junegunn/fzf.vim.git'
Plugin 'chrisbra/recover.vim.git'
Plugin 'vim-airline/vim-airline.git'
Plugin 'vim-airline/vim-airline-themes.git'
Plugin 'christoomey/vim-tmux-navigator.git'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
call vundle#end()
filetype on


" common setup
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=500                 "Store lots of :cmdline history set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set nowrap                      "lets not do wordwrap okay?
set hidden                      "I don't fully understand this setting yet
                                "see here:
                                "https://medium.com/usevim/vim-101-set-hidden-f78800142855a
set splitright                  ":vs opens at the right
set scrolloff=20                "Keeps the screen almost vertically centered
syntax on                       "allow syntax highlighting

colorscheme spacegray

if filereadable("./.vimrc")
    source ./.vimrc
endif

if filereadable("./.vim/config/plugins.vimrc")
   source ./.vim/config/plugins.vimrc
endif

let mapleader = ";"
nmap <leader>w :w!<cr>
nmap <leader>qw :q<cr>
nmap <leader>e :e<cr>
map  <leader>t :NERDTreeToggle<cr>
map  <leader>tf :NERDTreeFind<cr>
nmap <C-p> :FZF<cr>
noremap O O<Esc>
noremap o o<Esc>

vnoremap <leader>a <Esc>
inoremap <leader>a <Esc>
nnoremap <leader>a <Esc>
inoremap <leader>w <Esc>:w!<CR>

"press // to search for visually selected text
vnoremap // y/<C-R>"<CR>

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" for asyncomplete
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<cr>"

" this was a useful thing in vscode: moving line/lines upp or down
" http://vim.wikia.com/wiki/Moving_lines_up_or_down
" ∆ is ALT-j ˚ is ALT-k
nnoremap ∆ :m .+1<CR>==     
nnoremap ˚ :m .-2<CR>==
inoremap ∆ <Esc>:m .+1<CR>==gi
inoremap ˚ <Esc>:m .-2<CR>==gi
vnoremap ∆ :m '>+1<CR>gv=gv
vnoremap ˚ :m '<-2<CR>gv=gv

